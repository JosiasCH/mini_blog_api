# ============================================================
# üê≥ ENV FILE (Ejecuci√≥n con Docker Compose)
# Copia este archivo como .env.docker antes de ejecutar:
#   cp .env.docker.example .env.docker
# ============================================================

# Entorno de ejecuci√≥n
APP_ENV=prod

# URL de conexi√≥n a la base de datos DENTRO del contenedor
# ‚ö†Ô∏è Nota: el host aqu√≠ es 'db' (nombre del servicio en docker-compose)
DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/mini_blog

# (Opcional) URL de base de datos de pruebas dentro de Docker
TEST_DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/mini_blog_test

# Puerto expuesto por la API
APP_PORT=8000

# Credenciales de PostgreSQL (deben coincidir con docker-compose.yml)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=mini_blog

# Control de DDL en startup de la app (FastAPI)
# En Docker, la migraci√≥n la hace Alembic antes de arrancar Uvicorn (CMD del Dockerfile),
# as√≠ que no hace falta crear tablas desde la app.
RUN_STARTUP_DDL=0

# ------------------------------------------------------------
# ‚úÖ Recomendaciones:
# - NO subas .env.docker real al repositorio (solo el .example).
# - En desarrollo, credenciales simples est√°n bien; el volumen se destruye con `down -v`.
# - En producci√≥n usa variables seguras o Docker secrets.
# ------------------------------------------------------------
